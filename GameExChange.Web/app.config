<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">


    <alias alias="IRepositoryContext" type="GameExChange.Domain.Repos.IRepositoryContext, GameExChange.Domain" />
    <alias alias="EntityFrameworkRepositoryContext" type="GameExChange.Repository.EntityFramework.EntityFrameworkRepositoryContext, GameExChange.Repository" />
    <namespace name="test" />
    <assembly name="myUnityIOCContainerExample" />
    
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,
                      Microsoft.Practices.Unity.Interception.Configuration" />
    <container>
      <extension type="Interception" />

      <!--Cache Provider-->
      <!--<register type="OnlineStore.Infrastructure.Caching.ICacheProvider, OnlineStore.Infrastructure"
        mapTo="OnlineStore.Infrastructure.Caching.EntLibCacheProvider, OnlineStore.Infrastructure" />-->

      <!--仓储接口的注册-->
      <register type="IRepositoryContext" mapTo="EntityFrameworkRepositoryContext">
        <lifetime type="singleton" />
      </register>
      <!--<register type="OnlineStore.Domain.Repositories.IProductRepository, OnlineStore.Domain"
        mapTo="OnlineStore.Repositories.EntityFramework.ProductRepository, OnlineStore.Repositories" />-->
      <register type="GameExChange.Domain.Repos.IUserRepository, GameExChange.Domain"
                mapTo="GameExChange.Repository.EntityRepos.UserRepository, GameExChange.Repository" />
      <!--Domain Services-->
      <register type="GameExChange.Domain.Service.IDomainService, GameExChange.Domain"
                mapTo="GameExChange.Domain.Service.DomainService, GameExChange.Domain" />
      <!--应用服务的注册-->
      <register type="GameExChange.Business.IBusiness.IUserBusiness, GameExChange.Business"
                mapTo="GameExChange.Business.UserBusiness, GameExChange.Business"/>

      <!--Domain Services-->
      <!--<register type="OnlineStore.Domain.Services.IDomainService, OnlineStore.Domain" mapTo="OnlineStore.Domain.Services.DomainService, OnlineStore.Domain" />-->
      <!--应用服务的注册-->
      <!--<register type="OnlineStore.ServiceContracts.IProductService, OnlineStore.ServiceContracts" mapTo="OnlineStore.Application.ServiceImplementations.ProductServiceImp, OnlineStore.Application">
        --><!--注入AOP功能的实现--><!--
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.CachingBehavior, OnlineStore.Infrastructure" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, OnlineStore.Infrastructure" />
      </register>-->

      <!--<register type="OnlineStore.ServiceContracts.IOrderService, OnlineStore.ServiceContracts" mapTo="OnlineStore.Application.ServiceImplementations.OrderServiceImp, OnlineStore.Application">
        --><!--注入AOP功能的实现--><!--
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.CachingBehavior, OnlineStore.Infrastructure" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, OnlineStore.Infrastructure" />
      </register>-->
      <!--<register type="OnlineStore.ServiceContracts.IUserService, OnlineStore.ServiceContracts" mapTo="OnlineStore.Application.ServiceImplementations.UserServiceImp, OnlineStore.Application">
        --><!--注入AOP功能的实现--><!--
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.CachingBehavior, OnlineStore.Infrastructure" />
        <interceptionBehavior type="OnlineStore.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, OnlineStore.Infrastructure" />
      </register>-->

      <!--Domain Event Handlers-->
      <!--<register type="OnlineStore.Domain.Events.IDomainEventHandler`1[[OnlineStore.Domain.Events.OrderDispatchedEvent, OnlineStore.Domain]], OnlineStore.Domain" mapTo="OnlineStore.Domain.Events.EventHandlers.OrderDispatchedEventHandler, OnlineStore.Domain" name="OrderDispatchedEventHandler" />
      <register type="OnlineStore.Domain.Events.IDomainEventHandler`1[[OnlineStore.Domain.Events.OrderConfirmedEvent, OnlineStore.Domain]], OnlineStore.Domain" mapTo="OnlineStore.Domain.Events.EventHandlers.OrderConfirmedEventHandler, OnlineStore.Domain" name="OrderConfirmedEventHandler" />

      --><!--Event Handlers--><!--
      <register name="orderSendEmailHandler" type="OnlineStore.Events.IEventHandler`1[[OnlineStore.Domain.Events.OrderDispatchedEvent, OnlineStore.Domain]], OnlineStore.Events" mapTo="OnlineStore.Events.Handlers.SendEmailHandler, OnlineStore.Events.Handlers" />

      --><!--Event Aggregator--><!--
      <register type="OnlineStore.Events.IEventAggregator, OnlineStore.Events" mapTo="OnlineStore.Events.EventAggregator, OnlineStore.Events">
        <constructor>
          <param name="handlers">
            <array>
              <dependency name="orderSendEmailHandler" type="OnlineStore.Events.IEventHandler`1[[OnlineStore.Domain.Events.OrderDispatchedEvent, OnlineStore.Domain]], OnlineStore.Events" />
            </array>
          </param>
        </constructor>
      </register>-->

      <!--Event Bus-->
      <!--<register type="OnlineStore.Events.Bus.IEventBus, OnlineStore.Events" mapTo="OnlineStore.Events.Bus.EventBus, OnlineStore.Events">
        <lifetime type="singleton" />
      </register>-->

      <!--注入MsmqEventBus-->
      <!--<register type="OnlineStore.Events.Bus.IEventBus, OnlineStore.Events"
                mapTo="OnlineStore.Events.Bus.MsmqEventBus, OnlineStore.Events">
        <lifetime type="singleton" />
        <constructor>
          <param name="path" value=".\Private$\OnlineStoreQueue" />
        </constructor>
      </register>-->
    </container>
  </unity>
</configuration>